---
- name: Install/Setup Docker images and containers on Daedalus
  hosts: daedalus
  become: true
  become_user: root
  become_method: sudo
  tags:
    - buildbot
  vars:
    known_hosts: "{{ gitlab_keys.stdout_lines | sort | join('\n') }}"
  tasks:
    - name: Scan Gitlab ssh keys
      command: ssh-keyscan {{gitlab_hostname}}
      register: gitlab_keys
      changed_when: false
      tags:
        - always

    - name: Generate Buildbot TLS certificates
      delegate_to: localhost
      become: no
      import_role:
        name: buildbot-tls-certificates
      tags:
        - buildbot-tls

    - name: Install Buildbot SSH public keys on GitLab
      become: no
      gitlab_user:
        state:        present
        server_url:   "https://{{ gitlab_hostname }}/"
        api_token:    "{{ gitlab_root_private_token }}"

        username:     "{{ item.username     | default(omit) }}"
        name:         "{{ item.name         | default(omit) }}"
        email:        "{{ item.email        | default(omit) }}"
        password:     "{{ item.password     | default(omit) }}"
        sshkey_file:  "{{ lookup('file', item.sshkey + '.pub')  | default(omit) }}"
        sshkey_name:  "{{ item.sshkey_name  | default(omit) }}"
      loop: '{{ buildbot_ssh_clients }}'
      tags:
        - buildbot-gitlab
        - buildbot-gitlab-user

    - name: Set Buildbot groups on Gitlab
      become: no
      gitlab_user:
        state:        present
        server_url:   "https://{{ gitlab_hostname }}/"
        api_token:    "{{ gitlab_root_private_token }}"

        username:     "{{ item.username     | default(omit) }}"
        name:         "{{ item.name         | default(omit) }}"
        email:        "{{ item.email        | default(omit) }}"
        password:     "{{ item.password     | default(omit) }}"
        access_level: "{{ item.access_level | default(omit) }}"
        group:        "{{ item.group        | default(omit) }}"
      loop: '{{ buildbot_gitlab_groups }}'
      tags:
        - buildbot-gitlab
        - buildbot-gitlab-groups

    - name: Create Buildbot change hooks (Always reported as "changed")
      become: no
      gitlab_hook:
        state:         present
        api_url:       "https://{{ gitlab_hostname }}/api"
        api_token:     "{{ gitlab_root_private_token }}"

        hook_url:              '{{ item.hook_url              | default(omit) }}'
        hook_validate_certs:   '{{ item.hook_validate_certs   | default(omit) }}'
        issues_events:         '{{ item.issues_events         | default(omit) }}'
        job_events:            '{{ item.job_events            | default(omit) }}'
        merge_requests_events: '{{ item.merge_requests_events | default(omit) }}'
        note_events:           '{{ item.note_events           | default(omit) }}'
        pipeline_events:       '{{ item.pipeline_events       | default(omit) }}'
        project:               '{{ item.project               | default(omit) }}'
        push_events:           '{{ item.push_events           | default(omit) }}'
        tag_push_events:       '{{ item.tag_push_events       | default(omit) }}'
        token:                 '{{ item.token                 | default(omit) }}'
        wiki_page_events:      '{{ item.wiki_page_events      | default(omit) }}'
      loop: '{{ buildbot_gitlab_hooks }}'
      tags:
        - buildbot-gitlab
        - buildbot-gitlab-hook

    - name: Build and start the Buildbot master database container
      include_role:
        name: postgres
      vars:
        postgres_name: '{{ buildbot_database_name }}'
        postgres_backup_bindir: /usr/libexec/bacula/backup-scripts
        postgres_backup_script: '{{ postgres_backup_bindir }}/55.before_backup.{{ buildbot_database_name }}'
        postgres_restore_script: '{{ postgres_backup_bindir }}/55.before_restore.{{ buildbot_database_name }}'
        postgres_backup_dir: '{{ docker_backup_dir }}/{{ buildbot_database_name }}'
        postgres_restore_dir: '{{ bacula_dest }}/{{ postgres_backup_dir }}'
        postgres_etc_volume: '{{ buildbot_database_hostdir_config }}'
        postgres_init_volume: '{{ buildbot_database_hostdir_config }}/init.d'
        postgres_secrets_volume: '{{ buildbot_database_hostdir_config }}/secrets'
        postgres_hostname: '{{ buildbot_database_hostname }}'
        postgres_networks: '{{ buildbot_database_networks }}'
        postgres_published_ports: '{{ buildbot_database_published_ports }}'
        postgres_secret_database: '{{ buildbot_database_dbname }}'
        postgres_secret_superuser: '{{ buildbot_database_superuser }}'
        postgres_secret_superuser_password: '{{ buildbot_database_superuser_password }}'
        postgres_secret_user: '{{ buildbot_database_user }}'
        postgres_secret_user_password: '{{ buildbot_database_user_password }}'
      tags:
        - buildbot-database

    - name: Build and start the Buildbot master container
      import_role:
        name: buildbot-master
      tags:
        - buildbot-master

- name: Setup Buildbot worker system
  hosts: builder
  become: true
  become_user: root
  become_method: sudo
  tags:
    - buildbot
    - buildbot-worker
  vars:
    asset_host: "https://{{nexus_hostname}}/repository"
    asset_user: "buildbot"
    asset_password: "{{nexus_buildbot_password}}"
    asset_downloads:   "{{ asset_host }}/download"
    asset_orphans:     "{{ asset_host }}/orphans"
    asset_debian:      "{{ asset_host }}/debian"
    asset_sourceforge: "{{ asset_host }}/sourceforge"
    asset_gnu:         "{{ asset_host }}/gnu"
    asset_xorg:        "{{ asset_host }}/xorg"
    asset_kernel:      "{{ asset_host }}/kernel/linux"
    asset_pypi:        "{{ asset_host }}/pypi"
    known_hosts:       "{{ gitlab_keys.stdout_lines | sort | join('\n') }}"
    ptk_archive_uri:   "{{ asset_downloads }}/610-009981-023_SW_PTK_5.9_Client_RevA.tar"
  tasks:
    - name: Scan Gitlab ssh keys
      command: ssh-keyscan {{gitlab_hostname}}
      register: gitlab_keys
      changed_when: false
      tags:
        - always

    - name: Build and start the NTEL morty container
      import_role:
        name: buildbot-worker-ntel
      vars:
        buildbot_worker_hostdir_config: '{{ buildbot_worker_ntel_morty_hostdir_config }}'
        buildbot_worker_name: '{{ buildbot_worker_ntel_morty }}'
        buildbot_worker_passwd: '{{ buildbot_worker_ntel_morty_passwd }}'
        buildbot_worker_sshkey: '{{ buildbot_worker_ntel_morty_sshkey }}'
        buildbot_worker_tlsca: '{{ buildbot_ca_pem }}'
        buildbot_worker_tlskey: '{{ buildbot_worker_ntel_morty_tlskey }}'
        buildbot_worker_tlspem: '{{ buildbot_worker_ntel_morty_tlspem }}'
        buildbot_worker_image_dockerfile: 'Dockerfile-morty'
      tags:
        - buildbot-worker-ntel-morty

    - name: Build and start the NTEL sumo container
      import_role:
        name: buildbot-worker-ntel
      vars:
        buildbot_worker_hostdir_config: '{{ buildbot_worker_ntel_sumo_hostdir_config }}'
        buildbot_worker_name: '{{ buildbot_worker_ntel_sumo }}'
        buildbot_worker_passwd: '{{ buildbot_worker_ntel_sumo_passwd }}'
        buildbot_worker_sshkey: '{{ buildbot_worker_ntel_sumo_sshkey }}'
        buildbot_worker_tlsca: '{{ buildbot_ca_pem }}'
        buildbot_worker_tlskey: '{{ buildbot_worker_ntel_sumo_tlskey }}'
        buildbot_worker_tlspem: '{{ buildbot_worker_ntel_sumo_tlspem }}'
        buildbot_worker_image_dockerfile: 'Dockerfile-sumo'
      tags:
        - buildbot-worker-ntel-sumo

    - name: Build and start the NTEL warrior container
      import_role:
        name: buildbot-worker-ntel
      vars:
        buildbot_worker_hostdir_config: '{{ buildbot_worker_ntel_warrior_hostdir_config }}'
        buildbot_worker_name: '{{ buildbot_worker_ntel_warrior }}'
        buildbot_worker_passwd: '{{ buildbot_worker_ntel_warrior_passwd }}'
        buildbot_worker_sshkey: '{{ buildbot_worker_ntel_warrior_sshkey }}'
        buildbot_worker_tlsca: '{{ buildbot_ca_pem }}'
        buildbot_worker_tlskey: '{{ buildbot_worker_ntel_warrior_tlskey }}'
        buildbot_worker_tlspem: '{{ buildbot_worker_ntel_warrior_tlspem }}'
        buildbot_worker_image_dockerfile: 'Dockerfile-warrior'
      tags:
        - buildbot-worker-ntel-warrior

    - name: Build and start the PTXdist container
      import_role:
        name: buildbot-worker-ptxdist
      vars:
        buildbot_worker_hostdir_config: '{{ buildbot_worker_ptxdist_hostdir_config }}'
        buildbot_worker_name: '{{ buildbot_worker_ptxdist }}'
        buildbot_worker_passwd: '{{ buildbot_worker_ptxdist_passwd }}'
        buildbot_worker_sshkey: '{{ buildbot_worker_ptxdist_sshkey }}'
        buildbot_worker_tlsca: '{{ buildbot_ca_pem }}'
        buildbot_worker_tlskey: '{{ buildbot_worker_ptxdist_tlskey }}'
        buildbot_worker_tlspem: '{{ buildbot_worker_ptxdist_tlspem }}'
        buildbot_worker_image_dockerfile: 'Dockerfile'
      tags:
        - buildbot-worker-ptxdist

- name: Setup Buildbot tester units
  hosts: buildbot_testers
  tags:
    - buildbot
    - buildbot-worker-testorion
  vars:
    asset_host: "https://{{nexus_hostname}}/repository"
    asset_user: "buildbot"
    asset_password: "{{nexus_buildbot_password}}"
  tasks:
    - name: Setup Buildbot worker on Orion test unit
      import_role:
        name: buildbot-worker-testorion
