# buildbot/buildbot-worker

# please follow docker best practices
# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/

# Provides a base Ubuntu (16.04) image with latest buildbot worker installed
# the worker image is not optimized for size, but rather uses ubuntu for wider package availability

FROM        ubuntu:16.04

# Last build date - this can be updated whenever there are security updates so
# that everything is rebuilt
ENV security_updates_as_of=2019-02-08

ARG BUILDBOT_GID=1000
ARG BUILDBOT_UID=1000
ARG BUILDBOT_VERSION
ARG PTK_HSM_HOST="127.0.0.1"
ARG PTK_URI="http://127.0.0.1/610-009981-023_SW_PTK_5.9_Client_RevA.tar"
ARG PIP_VERSION="pip~=20.0"

# Install security updates and required packages
RUN apt-get update \
&&  DEBIAN_FRONTEND=noninteractive \
    apt-get -y install -q \
        alien \
        build-essential \
        chrpath \
        cmake \
        cpio \
        curl \
        default-jre-headless \
        diffstat \
        docbook-xsl \
        gawk \
        git \
        language-pack-en \
        libffi-dev \
        libpython2.7-testsuite \
        libssl-dev \
        locales \
        net-tools \
        python-dev \
        python-virtualenv \
        python3-dev \
        python3-setuptools \
        subversion \
        texinfo \
        wget \
        xsltproc \

# Generate UTF-8 locale for python3
&&  update-locale LANG=en_US.UTF-8 \

# Reset /bin/sh to bash instead of dash
&&  echo "dash dash/sh boolean false" \
|   debconf-set-selections -v \
&&  dpkg-reconfigure -f noninteractive dash

ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# Test runs produce a great quantity of dead grandchild processes.  In a
# non-docker environment, these are automatically reaped by init (process 1),
# so we need to simulate that here.  See https://github.com/Yelp/dumb-init
RUN curl https://github.com/Yelp/dumb-init/releases/download/v1.2.1/dumb-init_1.2.1_amd64.deb -Lo /tmp/init.deb \
&&  dpkg -i /tmp/init.deb \

# ubuntu pip version has issues so we should use the official version
&&  easy_install3 ${PIP_VERSION} \

# Install required python packages, and twisted
&&  python3 -m pip --no-cache-dir install \
    'twisted[tls]' \
    buildbot-worker==${BUILDBOT_VERSION} \
    requests \

# Install software for image signing
&&  curl ${PTK_URI} -Lo /tmp/ptk.tar \
&&  tar -v -x -C /tmp -f /tmp/ptk.tar \
&&  alien --to-deb --install --scripts /tmp/610-009981-023_SW_PTK_5.9_Client_RevA/SDKs/Linux64/ptkc_sdk/PTKcpsdk-5.9.0-RC5.x86_64.rpm \
&&  alien --to-deb --install --scripts /tmp/610-009981-023_SW_PTK_5.9_Client_RevA/SDKs/Linux64/ptkc_runtime/PTKcprt-5.9.0-RC5.x86_64.rpm \
&&  alien --to-deb --install --scripts /tmp/610-009981-023_SW_PTK_5.9_Client_RevA/SDKs/Linux64/network_hsm_access_provider/PTKnethsm-5.9.0-RC5.x86_64.rpm \
&&  echo "ET_HSM_NETCLIENT_SERVERLIST=${PTK_HSM_HOST}" > /etc/default/et_hsm \
&&  echo "/opt/safenet/protecttoolkit5/ptk/lib" > /etc/ld.so.conf.d/safenet_ptk.conf \
&&  ln -sf "/opt/safenet/protecttoolkit5/cprt/lib/linux-x86_64/libcthsm.so" "/opt/safenet/protecttoolkit5/ptk/lib/libcryptoki.so" \
&&  ldconfig -v \

# Clean up
&&  rm -rf /var/lib/apt/lists/* \
&&  rm -vrf /tmp/* \

# Create buildbot user
&&  groupadd --gid ${BUILDBOT_GID} buildbot \
&&  useradd --comment "Buildbot Server" -g buildbot --home-dir "/home/buildbot" --shell "/bin/bash" --uid ${BUILDBOT_UID} buildbot \
&&  mkdir -p --mode=0700 "/home/buildbot/.ssh" \
&&  mkdir /buildbot \
&&  chown -v -R buildbot:buildbot "/buildbot" \
&&  chown -v -R buildbot:buildbot "/home/buildbot"

USER buildbot

ENTRYPOINT ["/usr/bin/dumb-init"]
CMD ["twistd", "--pidfile=", "-ny", "/home/buildbot/buildbot.tac"]
