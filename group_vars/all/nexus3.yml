---
nexus_version: 3.29.2

# Nexus Backup
nexus_backup_dir_create: false  # Shall we create the dir, or do you already have something in place?
nexus_backup_configure: false  # Shall we configure backup ?
# Nexus default properties
# nexus_default_port: 8081
# nexus_docker_hosted_port: 9080
# nexus_docker_proxy_port: 9081
# nexus_docker_group_port: 9082
# nexus_default_context_path: '/'
# nexus_application_host: '{{ httpd_setup_enable | ternary("127.0.0.1", "0.0.0.0") }}'

# Nexus default admin password on first time install.
# This should not be set in your playbook.
# You can use your old password on the command line if
# you want to change your admin password after first install
# i.e.
# - Set your new password in nexus_admin_password
# - Run `ansible-playbook -i your/inventory.ini your_playbook.yml -e nexus_default_admin_password=oldpassword`
# nexus_default_admin_password: 'admin123'
# Nexus admin password to set and use.
# Note: this should be vault encrypted in your playbook.
# nexus_admin_password: 'changeme'

nexus_anonymous_access: true

nexus_public_hostname: '{{ docker_name_prefix }}nexus.novatech-llc.com'
nexus_hostname: '{{ nexus_public_hostname }}' # used by other parts of the system
nexus_public_scheme: https
nexus_public_port: 443

# How should the role access the API for provisionning
nexus_api_hostname: '{{ nexus_public_hostname }}'
nexus_api_scheme: '{{ nexus_public_scheme }}'
nexus_api_validate_certs: "{{ nexus_api_scheme == 'https' }}"
nexus_api_context_path: "{{ nexus_default_context_path }}"
nexus_api_port: "{{ nexus_public_port }}"

# security realms
nexus_nuget_api_key_realm: false
nexus_npm_bearer_token_realm: false
nexus_rut_auth_realm: false
# nexus_rut_auth_header: "CUSTOM_HEADER"
nexus_ldap_realm: true
nexus_docker_bearer_token_realm: false

# Enable/disable audit capability
# nexus_audit_enabled: false

# email server
nexus_email_server_enabled: false
# nexus_email_server_host: "localhost"
# nexus_email_server_port: 25
# nexus_email_server_username: ""
# nexus_email_server_password: ""
# nexus_email_from_address: "nexus@example.org"
# nexus_email_subject_prefix: ""
# nexus_email_tls_enabled: false
# nexus_email_tls_required: false
# nexus_email_ssl_on_connect_enabled: false
# nexus_email_ssl_check_server_identity_enabled: false
# nexus_email_trust_store_enabled: false

# nexus_branding_header: ""
# nexus_branding_footer: "Last provisionned {{ ansible_facts.date_time.iso8601 }}"

httpd_setup_enable: false
# httpd_server_name: "{{ nexus_public_hostname }}"
# httpd_default_admin_email: "admin@example.com"
# httpd_ssl_certificate_file: 'files/nexus.vm.crt'
# httpd_ssl_certificate_key_file: 'files/nexus.vm.key'
# httpd_ssl_certificate_chain_file: "{{ httpd_ssl_certificate_file }}"
# If httpd_copy_ssl_files is false you need to provide the following variables:
# - httpd_ssl_cert_file_location
# - httpd_ssl_cert_key_location
# - httpd_ssl_cert_chain_file_location <= optionnal. Leave unset if none
# httpd_copy_ssl_files: true
# These specifies to the vhost file where to find on the remote file system the certificates files.
# httpd_ssl_cert_file_location: "/etc/pki/tls/certs/nexus.vm.crt"
# httpd_ssl_cert_key_location: "/etc/pki/tls/private/nexus.vm.key"
# httpd_ssl_cert_chain_file_location: "{{ httpd_ssl_cert_file_location }}"

ldap_connections:
  - ldap_name: 'NovaTech LDAP' # used as a key to update the ldap config
    ldap_protocol: 'ldap' # ldap or ldaps
    ldap_hostname: 'ldap.novatech-llc.com'
    ldap_port: 389
    ldap_auth: 'simple'
    ldap_auth_username: 'cn=proxyagent,dc=novatech'
    ldap_auth_password: '{{ openldap_proxyagent_password }}'
    ldap_search_base: 'dc=novatech'
    ldap_user_base_dn: 'ou=user'
    #ldap_user_filter: '(cn=*)' # (optional)
    ldap_user_object_class: 'inetOrgPerson'
    ldap_user_id_attribute: 'uid'
    ldap_user_real_name_attribute: 'cn'
    ldap_user_email_attribute: 'mail'
    ldap_map_groups_as_roles: yes
    ldap_map_groups_as_roles_type: "static"
    ldap_user_memberof_attribute: ""
    ldap_group_base_dn: 'cn=nexus.novatech-llc.com,ou=group'
    ldap_group_object_class: 'posixGroup'
    ldap_group_id_attribute: 'cn'
    ldap_group_member_attribute: 'memberUid'
    ldap_group_member_format: '${username}'
    ldap_user_subtree: false
    ldap_group_subtree: true

# http proxy
nexus_with_http_proxy: false
nexus_with_https_proxy: false

nexus_config_maven: false
nexus_config_pypi: true
nexus_config_docker: true
nexus_config_raw: true
nexus_config_rubygems: false
nexus_config_bower: false
nexus_config_npm: false
nexus_config_nuget: false
nexus_config_gitlfs: false
nexus_config_yum: false
nexus_config_apt: false

nexus_content_selectors: []

# also see _nexus_privilege_defaults below
nexus_privileges:
  - name: all-repos-read  # used as key to update a privilege
    description: 'Read & Browse access to all repos'
    repository: '*'
    actions:
      - read
      - browse

nexus_roles:
  - id: anonymous
    name: anonymous
    description: Selective anonymous access
    privileges:
      - nx-repository-view-pypi-pypi-browse
      - nx-repository-view-pypi-pypi-read
      - nx-repository-view-raw-debian-browse
      - nx-repository-view-raw-debian-read
      - nx-repository-view-raw-docs-browse
      - nx-repository-view-raw-docs-read
      - nx-repository-view-raw-download-browse
      - nx-repository-view-raw-download-read
      - nx-repository-view-raw-gnu-browse
      - nx-repository-view-raw-gnu-read
      - nx-repository-view-raw-kernel-browse
      - nx-repository-view-raw-kernel-read
      - nx-repository-view-raw-orphans-browse
      - nx-repository-view-raw-orphans-read
      - nx-repository-view-raw-ptxdist-sources-browse
      - nx-repository-view-raw-ptxdist-sources-read
      - nx-repository-view-raw-public-releases-browse
      - nx-repository-view-raw-public-releases-read
      - nx-repository-view-raw-sourceforge-browse
      - nx-repository-view-raw-sourceforge-read
      - nx-repository-view-raw-ubuntu-archive-browse
      - nx-repository-view-raw-ubuntu-archive-read
      - nx-repository-view-raw-xorg-browse
      - nx-repository-view-raw-xorg-read
    roles: []
  - id: Backup
    name: backup
    description: Backup system
    privileges:
      - nx-tasks-read
      - nx-tasks-run
    roles: []
  - id: Buildbot
    name: buildbot
    description: Build robots
    privileges:
      - nx-search-read
      - all-repos-read
      - nx-repository-view-*-*-*
    roles: []
  - id: admin
    name: novatech-admin
    description: NovaTech Administrators
    privileges: []
    roles:
      - nx-admin
  - id: developer
    name: novatech-developer
    description: NovaTech Development Team
    privileges:
      - nx-component-upload
      - nx-repository-view-*-*-*
    roles: []
  - id: hardware
    name: novatech-hardware
    description: NovaTech Hardware Team
    privileges:
      - nx-component-upload
      - nx-repository-view-raw-public-releases-add
      - nx-repository-view-raw-public-releases-browse
      - nx-repository-view-raw-public-releases-read
      - nx-repository-view-raw-test-fixtures-add
      - nx-repository-view-raw-test-fixtures-browse
      - nx-repository-view-raw-test-fixtures-read
    roles: []
  - id: testing
    name: novatech-testing
    description: Tech-Support-Testing Group
    privileges:
      - nx-repository-view-*-*-browse
      - nx-repository-view-*-*-read
    roles: []
  - id: proprietary
    name: proprietary
    description: Download Proprietary Source Code Archives
    privileges:
      - nx-repository-view-raw-proprietary-browse
      - nx-repository-view-raw-proprietary-read
    roles: []

nexus_local_users:
  - username: anonymous
    first_name: Anonymous
    last_name: User
    email: anonymous@example.org
    password: ""
    roles:
      - anonymous
  - username: bacula
    first_name: Bacula
    last_name: Backups
    email: bacula@novatech-llc.com
    password: "{{ nexus_bacula_password }}"
    roles:
      - Backup
  - username: buildbot
    first_name: NovaTech
    last_name: CI
    email: buildbot@novatech-llc.com
    password: "{{ nexus_buildbot_password }}"
    roles:
      - Buildbot
  - username: proprietary
    first_name: Proprietary Code
    last_name: User
    email: admin@novatech-llc.com
    password: '{{ nexus_proprietary_password }}'
    roles:
      - proprietary

nexus_ldap_users: []

nexus_delete_default_repos: true

nexus_delete_default_blobstore: true

#
# Nexus blobstore config
nexus_blobstores:
- name: archive
  path: '{{ nexus_data_mountpoint }}/blobs/archive'
- name: default
  path: '{{ nexus_data_mountpoint }}/blobs/default'
- name: permanent
  path: '{{ nexus_data_mountpoint }}/blobs/permanent'

# Cleanup Polices
nexus_repos_cleanup_policies:
  - name: ntel-unofficial-cleanup
    format: raw
    mode:
    notes: "Cleanup ntel-unofficial (CI) builds older than 1 week"
    criteria:
      lastBlobUpdated: 7
      lastBlobDownloaded: 7


# also see _nexus_repos_maven_defaults below
nexus_repos_maven_proxy: []

nexus_repos_maven_hosted: []

nexus_repos_maven_group: []

# Scheduled tasks
# Note: these are tasks you define by yourself (default: none)
# If you used `nexus_backup_configure: true` above you will see a scheduled task for this
# in your GUI which is not part of the below list
nexus_backup_task_name: 'Database Export'
nexus_compact_archive_task_name: 'Compact "Archive" Blobstore'
nexus_compact_default_task_name: 'Compact "Default" Blobstore'
nexus_compact_permanent_task_name: 'Compact "Permanent" Blobstore'
nexus_scheduled_tasks:
- name: '{{ nexus_compact_archive_task_name }}'
  typeId: blobstore.compact
  schedule_type: cron
  cron: '0 15 * * * ?'
  taskProperties:
    blobstoreName: archive
- name: '{{ nexus_compact_default_task_name }}'
  typeId: blobstore.compact
  schedule_type: cron
  cron: '0 30 * * * ?'
  taskProperties:
    blobstoreName: default
- name: '{{ nexus_compact_permanent_task_name }}'
  typeId: blobstore.compact
  schedule_type: cron
  cron: '0 45 * * * ?'
  taskProperties:
    blobstoreName: permanent
- name: '{{ nexus_backup_task_name }}'
  typeId: db.backup
  schedule_type: manual
  taskProperties:
    location: '{{ nexus_backup_mountpoint }}/db'

# _nexus_privilege_defaults:
#   type: repository-view
#   format: maven2
#   actions:
#     - read

_nexus_repos_maven_defaults: {}

# pypi support ...
_nexus_repos_pypi_defaults:
  blob_store: "default"
  strict_content_validation: true
  version_policy: release  # release, snapshot or mixed
  layout_policy: strict  # strict or permissive
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only

nexus_repos_pypi_hosted:
  - name: pypi-internal
    version_policy: release
    write_policy: allow  # one of "allow", "allow_once" or "deny"

nexus_repos_pypi_group:
  - name: pypi
    member_repos:
      - pypi-internal
      - pypi-proxy

nexus_repos_pypi_proxy:
  - name: pypi-proxy
    remote_url: 'https://pypi.python.org/'
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

# raw repo support

_nexus_repos_raw_defaults:
  blob_store: "default"
  strict_content_validation: false
  version_policy: release  # release, snapshot or mixed
  layout_policy: strict  # strict or permissive
  write_policy: allow_once  # one of "allow", "allow_once" or "deny"
  maximum_component_age: 1440  # Nexus gui default. For proxies only
  maximum_metadata_age: 1440  # Nexus gui default. For proxies only
  negative_cache_enabled: true  # Nexus gui default. For proxies only
  negative_cache_ttl: 1440  # Nexus gui default. For proxies only


nexus_repos_raw_proxy:
  - name: debian
    remote_url: 'http://ftp.us.debian.org/debian/'
  - name: gnu
    remote_url: 'http://mirror.team-cymru.com/gnu/'
  - name: kernel
    remote_url: 'https://mirrors.edge.kernel.org/pub/'
  - name: sourceforge
    remote_url: 'http://downloads.sourceforge.net/project'
  - name: ubuntu-archive
    remote_url: 'http://archive.ubuntu.com/ubuntu/'
  - name: xorg
    remote_url: 'http://xorg.mirrors.pair.com/'

nexus_repos_raw_hosted:
  - name: docs
    write_policy: allow
    blob_store: permanent
  - name: download
    write_policy: allow
    blob_store: permanent
  - name: ntel-archive
    blob_store: archive
  - name: ntel-release
    blob_store: permanent
  - name: ntel-sstate
    write_policy: allow
    blob_store: default
  - name: ntel-unofficial
    blob_store: default
  - name: orphans
    write_policy: allow
    blob_store: permanent
  - name: proprietary
    blob_store: permanent
  - name: ptxdist-release
    blob_store: permanent
  - name: ptxdist-sources
    blob_store: permanent
  - name: ptxdist-unofficial
    blob_store: default
  - name: public-releases
    blob_store: permanent
  - name: test-fixtures
    blob_store: permanent

nexus_repos_raw_group:
  - name: ntel
    member_repos:
      - ntel-release
      - ntel-archive
      - ntel-unofficial

# Docker support
_nexus_repos_docker_defaults: {}

nexus_repos_docker_hosted: []

nexus_repos_docker_proxy: []

nexus_repos_docker_group: []

# RubyGems support
_nexus_repos_rubygems_defaults: {}

nexus_repos_rubygems_hosted: []

nexus_repos_rubygems_group: []

nexus_repos_rubygems_proxy: []

# Bower support
_nexus_repos_bower_defaults: {}

nexus_repos_bower_hosted: []

nexus_repos_bower_group: []

nexus_repos_bower_proxy: []

# npm support
_nexus_repos_npm_defaults: {}

nexus_repos_npm_hosted: []

nexus_repos_npm_group: []

nexus_repos_npm_proxy: []

# nuget support
_nexus_repos_nuget_defaults: {}

nexus_repos_nuget_hosted: []

nexus_repos_nuget_group: []

nexus_repos_nuget_proxy: []

# gitlfs support
_nexus_repos_gitlfs_defaults: {}

nexus_repos_gitlfs_hosted: []

# yum support ...
nexus_repos_yum_hosted: []
nexus_repos_yum_proxy: []
nexus_repos_yum_group: []

_nexus_repos_yum_defaults: {}

# apt support
# More on how to work with apt repos https://help.sonatype.com/repomanager3/formats/apt-repositories
_nexus_repos_apt_defaults: {}

nexus_repos_apt_hosted: []
nexus_repos_apt_proxy: []


# Nexus Docker Install Configuration
nexus_host_docker: true
nexus_container_name: '{{ docker_name_prefix }}nexus3'
nexus_image_tag: 'sonatype/nexus3:{{ nexus_version}}'
nexus_backup_volume: '{{ docker_name_prefix }}nexus-backup'
nexus_data_volume: '{{ docker_name_prefix }}nexus-data'
nexus_networks:
  - name: '{{ docker_network_frontend }}'
    aliases:
      - '{{ nexus_public_hostname }}'
nexus_port_args:
  - "{{ nexus_default_port }}"
nexus_volumes:
  - '{{ nexus_data_volume }}:{{ nexus_data_mountpoint }}:z'
  - '{{ nexus_backup_volume }}:{{ nexus_backup_mountpoint }}:z'
nexus_docker_backup_dir: "{{ docker_backup_dir }}/NEXUS3"
nexus_docker_restore_dir: "{{ bacula_dest }}{{ nexus_docker_backup_dir }}"
